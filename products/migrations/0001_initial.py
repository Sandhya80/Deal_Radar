# Generated by Django 5.2.3 on 2025-06-30 15:07

# Initial migration for the products app.
# Defines core models: Product, TrackedProduct, DealAlert, PriceHistory.
# Sets up indexes and unique constraints for efficient queries and data integrity.

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        # Create Product model: stores product details for tracking
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('url', models.URLField(max_length=500, validators=[django.core.validators.URLValidator()])),
                ('image_url', models.URLField(blank=True, max_length=500, null=True)),
                ('current_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('site_name', models.CharField(blank=True, max_length=100)),
                ('product_id', models.CharField(blank=True, max_length=100)),
                ('category', models.CharField(blank=True, max_length=100)),
                ('brand', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_scraped', models.DateTimeField(auto_now_add=True)),
                ('scrape_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'db_table': 'products',
                'indexes': [
                    models.Index(fields=['site_name'], name='products_site_na_e793ec_idx'),
                    models.Index(fields=['category'], name='products_categor_fce6e6_idx'),
                    models.Index(fields=['is_active'], name='products_is_acti_cb485f_idx')
                ],
            },
        ),
        # Create TrackedProduct model: links users to products they track
        migrations.CreateModel(
            name='TrackedProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desired_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('notify_on_price_drop', models.BooleanField(default=True)),
                ('notify_on_availability', models.BooleanField(default=True)),
                ('minimum_discount_percent', models.DecimalField(decimal_places=2, default=Decimal('10.00'), max_digits=5)),
                ('is_active', models.BooleanField(default=True)),
                ('last_notification_sent', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tracked Product',
                'verbose_name_plural': 'Tracked Products',
                'db_table': 'tracked_products',
            },
        ),
        # Create DealAlert model: stores alerts for price drops and availability
        migrations.CreateModel(
            name='DealAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('price_drop', 'Price Drop'), ('target_reached', 'Target Price Reached'), ('availability', 'Back in Stock')], max_length=20)),
                ('old_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('new_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount_percent', models.DecimalField(decimal_places=2, max_digits=5)),
                ('email_sent', models.BooleanField(default=False)),
                ('sms_sent', models.BooleanField(default=False)),
                ('whatsapp_sent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tracked_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.trackedproduct')),
            ],
            options={
                'verbose_name': 'Deal Alert',
                'verbose_name_plural': 'Deal Alerts',
                'db_table': 'deal_alerts',
                'ordering': ['-created_at'],
            },
        ),
        # Create PriceHistory model: stores historical price data for products
        migrations.CreateModel(
            name='PriceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('was_available', models.BooleanField(default=True)),
                ('scraper_source', models.CharField(default='manual', max_length=50)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
            options={
                'verbose_name': 'Price History',
                'verbose_name_plural': 'Price Histories',
                'db_table': 'price_history',
                'ordering': ['-timestamp'],
                'indexes': [
                    models.Index(fields=['product', 'timestamp'], name='price_histo_product_bddde2_idx'),
                    models.Index(fields=['timestamp'], name='price_histo_timesta_8cf394_idx')
                ],
            },
        ),
        # Add indexes and unique constraints for TrackedProduct and DealAlert
        migrations.AddIndex(
            model_name='trackedproduct',
            index=models.Index(fields=['user', 'is_active'], name='tracked_pro_user_id_62c804_idx'),
        ),
        migrations.AddIndex(
            model_name='trackedproduct',
            index=models.Index(fields=['is_active'], name='tracked_pro_is_acti_acaddf_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='trackedproduct',
            unique_together={('user', 'product')},
        ),
        migrations.AddIndex(
            model_name='dealalert',
            index=models.Index(fields=['tracked_product', 'created_at'], name='deal_alerts_tracked_f43a6e_idx'),
        ),
        migrations.AddIndex(
            model_name='dealalert',
            index=models.Index(fields=['alert_type'], name='deal_alerts_alert_t_a04aed_idx'),
        ),
    ]
